# This is GitMon configuration example. Copy it to ~/.gitmon.conf and edit to suit your needs

########################
# Notification command #
########################

### Mac OS X ###

#Growl notification is currently configured.
notification.command = growlnotify -name ${name} -m ${status} -s --image ${image}

### Linux ###

#In linux where libnotify-bin is available:
#notification.command = notification-send "${name}" "${status}"

### Windows ###

#Windows users may try to configure their command by using http://www.growlforwindows.com/gfw/

########################
# Notification details #
########################

#Maximum number of new commits to show
max.new.commits = 5

#Maximum number of files to show in commit info. 0 is unlimited.
max.files.info = 3

#Notify when new branch appears?
notify.new.branch = 1

#Notify when new tag appears?
notify.new.tag = 1

###############
# Git options #
###############

#Pull when checking for updates?
auto.pull = 1

#############
# Variables #
#############

#A variable which will be substituted. You can have many of these
#In following example ${repos.root} will be replaced with ~/Development/repos
repos.root = ~/Dvelopment/repos

#Example variable
#example.var = Something

#######################
# Repository scanning #
#######################

#Will scan for repositories in ~/Development/projects
scan.myrepos = ~/Development/projects

#Another scanned directory
#scan.misc = /misc/repos

##########################
# Repository definitions #
##########################

#repo-name.name = Repo Name (optional)
#repo-name.path = /path/to/repo

#GitMon repository
gitmon.name = GitMon Repo
gitmon.path = ~/Development/python/gitmon

#Example repo definition (using ${repos.root} variable defined above)
#repo-x.name = Repo X
#repo-x.path = ${repos.root}/repo-x

#Nameless definition example. Name is generated from path
#repo-y.path = ${repos.root}/repo-y
